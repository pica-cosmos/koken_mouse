#ifndef SEARCH_H_
#define SEARCH_H_

#include "Definations/original_typedef.h"

//迷路の歩数Mapを初期化する。全体を0xff、引数のゴール座標x,yは0で初期化する
void init_map(int x, int y);

/*------------------------------------------------------------------
座標x,yをゴールとした歩数Mapを作成する。
maskの値(MASK_SEARCH or MASK_SECOND)によって、(static_parameters.hで定義)
探索用の歩数Mapを作るか(MASK_SEARCH)、最短走行の歩数Mapを作るか(MASK_SECOND)が切り替わる
--------------------------------------------------------------------*/
void make_map(int x, int y, int mask);

/*-----------------------------------------------------------------
壁情報を記録
引数の座標x,yに壁情報を書き込む
mypos.dirを基に、ロボットの絶対方向から壁情報を求める
----------------------------------------------------------------*/
void set_wall(int x, int y);

/*---------------------------------------------------------------
//座標x,yが未探索区間か否かを調べる
//指定された区画が未探索か否かを判断する関数 未探索:true 探索済:false
-----------------------------------------------------------------*/
t_bool is_unknown(int x, int y);

/*---------------------------------------------------------------
座標x,yと、向いている方角dirから優先度を算出する
そのマスの情報から、優先度を算出する
未探索が一番優先度が高い.(4)
それに加え、自分の向きと、行きたい方向から、
前(2)横(1)後(0)の優先度を付加する。
-----------------------------------------------------------------*/
int get_priority(int x, int y, t_direction dir);

/*---------------------------------------------------------------
//ゴール座標x,yに向かう場合、今どちらに行くべきかを判断する。
//探索、最短の切り替えのためのmaskを指定、dirは方角を示す
-----------------------------------------------------------------*/
int get_nextdir(int x, int y, int mask, t_direction *dir);

//ゴール座標としての引数gx,gyに向かって足立法で迷路を探索する
void search_adachi(int gx, int gy);


#endif